{"name":"CheckLT","tagline":"Taint Checking for Mere Mortals","body":"CheckLT: Taint Checking for Mere Mortals\r\n========================================\r\n\r\nCheckLT is a program verification tool for Java which can help you use taint tracking to find defects in your software. CheckLT provides an easy to install verification toolset, a simple, non-invasive syntax for annotating programs, and a dynamically configurable security lattice. \r\n\r\nCheckLT was born out of a research project at the University of Central Florida where we are researching creating tools for secure information flow analysis for Android applications. CheckLT does not implement full information flow security, but instead aims at being a lightweight security analysis toolkit for Java. \r\n\r\nThough CheckLT relies on Checker Framework for its base functionality (in fact, it is a plugin for the checker framework) CheckLT is being distributed independently of Checker Framework as a part of an experiment by this author to make formal verification tools more easily accessible outside of the research community. You can think of it as a \"Click, Run, Verify!\" approach to formal methods software!\r\n\r\n\r\nInstall\r\n=======\r\nBefore you install CheckLT, make sure you have a recent Java 7 (1.7) installed. You can use either the Oracle JDK or OpenJDK.\r\n\r\n```java\r\nfunction fancyAlert(arg) {\r\n  if(arg) {\r\n    $.facebox({div:'#foo'})\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\nSection 1\r\n---------\r\nSome text\r\n\r\n\r\nSection 2\r\n---------\r\nSome more text","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}